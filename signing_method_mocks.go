// Code generated by MockGen. DO NOT EDIT.
// Source: signing_method.go

// Package jwt is a generated GoMock package.
package jwt

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSigningMethod is a mock of SigningMethod interface.
type MockSigningMethod struct {
	ctrl     *gomock.Controller
	recorder *MockSigningMethodMockRecorder
}

// MockSigningMethodMockRecorder is the mock recorder for MockSigningMethod.
type MockSigningMethodMockRecorder struct {
	mock *MockSigningMethod
}

// NewMockSigningMethod creates a new mock instance.
func NewMockSigningMethod(ctrl *gomock.Controller) *MockSigningMethod {
	mock := &MockSigningMethod{ctrl: ctrl}
	mock.recorder = &MockSigningMethodMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSigningMethod) EXPECT() *MockSigningMethodMockRecorder {
	return m.recorder
}

// Alg mocks base method.
func (m *MockSigningMethod) Alg() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Alg")
	ret0, _ := ret[0].(string)
	return ret0
}

// Alg indicates an expected call of Alg.
func (mr *MockSigningMethodMockRecorder) Alg() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Alg", reflect.TypeOf((*MockSigningMethod)(nil).Alg))
}

// Sign mocks base method.
func (m *MockSigningMethod) Sign(stringToSign string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Sign", stringToSign)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Sign indicates an expected call of Sign.
func (mr *MockSigningMethodMockRecorder) Sign(stringToSign interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Sign", reflect.TypeOf((*MockSigningMethod)(nil).Sign), stringToSign)
}

// Verify mocks base method.
func (m *MockSigningMethod) Verify(verifyData string, sign []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Verify", verifyData, sign)
	ret0, _ := ret[0].(error)
	return ret0
}

// Verify indicates an expected call of Verify.
func (mr *MockSigningMethodMockRecorder) Verify(verifyData, sign interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Verify", reflect.TypeOf((*MockSigningMethod)(nil).Verify), verifyData, sign)
}
